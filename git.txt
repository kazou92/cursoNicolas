es un sitema de versiones de controller ,es el mas utilizado
para configurar git comando:
es una herramienta que nos permite de tener una historial de todo el codigo que hemos escrito
git nos permite trabjar sobre nuestro codigo de manera descentralizada
NB: rollback es volvera una version anterior a nuestro codigo
NB: CR ES carrage return LF : line feed

git config --globall user.name "adler"
git config -- globall user.email "adlersejousnat92@gmail.com"
git config -- globall core.editor "code --wait"
git config -- globall -e es para ver todas las configuaraciones que acabamos de hacer en VSC.
git config -- globall core.editor core.autocrlf  true(windows), input(mac/linux)
git init : es para initial un projecto en git (.git es un archivo q vas estar creado )el punto en git significa es un directorio encuentra oculto que no basta ejecutar el comando ls para listalo sino ls - a para mostrar absolutamente todo
ls -a en .git mostrar : . .. .git 
. es directorio actual donde se encuentra 
cd .. para mover a un directorio atras
 cd .git se encuentra todos los archivos y directorios que nos permitiran gestionar nuestro projectode git (git status, git commit etc...)

 git rm nombre para elimina el archivo
 git restore para recuperar
 git mv para renombrar un archivo y lleva dos argumentos 
 git status -s
 git diff
 git diff --staged
 git log : es para revisar todo el historial de nuestro repositorio
 git log --oneline
 git branch para ver en que ramas estamos 
 git checkout -b nombre de la ramas que quieres crear
 git merge la rama que queremos traer .recuerda para hacer un merge tiene que estar en la rama main (master)

                                                CONFIGURACION DE CORE.AUTOCRLF



                                        USO DE GIT 
                                    -historial
                                    -Almacebnar codigo
                                    -trabjar en equipo
                                    - cuando se introdujo un error    